fm --- our own
httplib --- not supported. Renamed to http.client in Python 3. The 2to3 tool will automatically adapt imports
sets --- not upported. Use set
urllib2 --- not supported. Renamed to urllib.request and urllib.error. The 2to3 tool will automatically adapt imports
WMCore ---  part of dmwm
Apps --- our own
cPickle --- not supported. Just use normal pickle
cStringIO --- not supported. cStringIO is removed. Use io.StringIO
dashboard --- our own
dq2 --- our own
phedexRequest --- our own
SocketServer --- not supported. Renamed to socketserver in Python 3. The 2to3 tool will automatically adapt imports
yaml --- supported
StageManager ---  part of dmwm
antlr3 --- not supported. Port to: https://github.com/antlr/antlr3/tree/master/runtime/Python3
antrl --- our own. Uses antlr3 as dep.
Cheetah --- not supported. Porting to jinja2
cjson --- not supported. Use json? or https://pypi.python.org/pypi/simplejson/
cookielib --- not supported. Renamed to http.cookiejar in Python 3. The 2to3 tool will automatically adapt imports
DAS ---  part of dmwm
get_schema --- our own
gridfs --- supported
HTMLParser --- Not supproted. Renamed to html.parser. The 2to3 tool will automatically adapt imports
md5 --- Not supported.  Use the hashlib.md5 module instead. Only old projects use it.
memcache --- used in OLD only
mongoengine --- supported
Queue --- not supported. Renamed to queue. The 2to3 tool will automatically adapt imports.
Stemmer --- supported. https://pypi.python.org/pypi/PyStemmer
StringIO --- not supported. Use io.StringIO
thread ---  not supported. renamed to _thread in Python 3. The 2to3 tool will automatically adapt imports
urlparse --- not supported. renamed to urllib.parse in Python 3. The 2to3 tool will automatically adapt imports
xmlrpclib --- not supported. Renamed to xmlrpc.client in Python 3. The 2to3 tool will automatically adapt imports
yajl - Not supported. Port to https://github.com/rtyler/py-yajl/ or original: https://github.com/pykler/yajl-py:  if using python3, yajl-py expects bytes and not strings
ldap --- not supported. Use https://pypi.python.org/pypi/ldap3
SiteDB --- part of dmwm
__builtin__ --- not supported. Renamed to builtins in Python3
FWCore --- not supported. Our own. https://github.com/cms-sw/cmssw/tree/CMSSW_8_1_X/FWCore
restkit --- not supported. (Prosmised support in 2011) http://restkit.readthedocs.io/en/latest/. Do we need it?
new --- not supported. Use the types moduleâ€™s classes instead.
BossLite --- our own
clarens_util --- not supported. Our own? http://www.puenterswis.ch/webcam/psp/image.py
commands --- not supported. Use the subprocess module instead
DBSAPI --- part of dmwm
dbsCgiApi --- not supported. Our own https://github.com/bbockelm/DBS/blob/master/Clients/PythonAPI/dbsCgiApi.py
dbsException --- our own
dlsApi --- part of dmwm
dlsClient --- our own
dlsDataObjects --- our own
glite_wmsui_LbWrapper --- not supported. our own. 'glite_wmsui_LbWrapper' exists on both gLite 3.1 and gLite 3.2
IOMC --- not supported. Custom https://github.com/ahlinist/cmssw/tree/master/IOMC
Job --- our own
mod_python --- supported
MySQLdb --- not supported. Use: https://pypi.python.org/pypi/mysqlclient
popen2 --- not supported. Use the subprocess module.
ProdAgentCore --- not found. https://twiki.cern.ch/twiki/bin/view/Main/LSCSWorkbook
ProdAgentDB --- not found. We create it?
ProdCommon --- part of dmwm
pysqlite2 --- not supported. Renamed to: sqlite3
RunRes --- not found. No idea where this is from
sha --- not supoorted. Use the hashlib module instead.
wmproxymethods ---  not?? our own. part of glite. http://egee-jra1-wm.mi.infn.it/egee-jra1-wm/api_docwmproxy_python/
wmsui_api --- not?? our own. https://github.com/italiangrid/wms-ui
ConfDBAuth --- our own. We deploy it?
DBSSecrets --- our own. We deploy it?
djangokey --- our own. We deploy it?
mechanize --- Not supported. Use: https://github.com/jmcarp/robobrowser or https://github.com/hickford/MechanicalSoup
Monitoring --- not?? our own. https://twiki.cern.ch/twiki/bin/view/CMSPublic/WorkBookDQM
OpenSSL --- supported https://pypi.python.org/pypi/pyOpenSSL
T0WmaDataSvc --- Our own
victor_db --- our own. We deploy it?
CMSCompAnalytics --- our own. Created
DCAF --- our own
pyspark --- supported. (was not tested)
sklearn --- supported
SPARK --- our own
xgboost --- supported
apmon ---  our won
buildslaveconfig --- our own
classad --- supported. Need to recompile. http://research.cs.wisc.edu/htcondor/classad/ /WMCore/BossAir/Plugins/PyCondorPlugin.py
Configuration ---  renamed to configparser in Python 3. The 2to3 tool will automatically adapt imports
Controllers --- not supported????? only used in WMCore/src/python/WMCore/WebTools/Masthead.py
couchapp --- not supported. Should be supported soon. http://stackoverflow.com/questions/5849316/is-there-a-simpler-couchapp-than-couchapp
dbs --- part of dmwm
dbs3Client --- not supported? our own. https://github.com/CMSCompOps/WmAgentScripts/blob/master/dbs3Client.py
dcap --- not supported. https://github.com/alexanderwaldin/dcap
get_dbs --- __all__
get_remote_queue --- __all__
hotshot --- Not supported. The "hotshot" module disappeared in Python3.x.
htcondor --- supported. (Is connected with classad). Need to recompile.
Integration_t --- our own
mox --- not supported. Use https://pypi.python.org/pypi/mock or https://pypi.python.org/pypi/mox3
PSetTweaks --- our own
queueConfigFromConfigObject  --- __all__
queueFromConfig  --- __all__
ReqMgr --- our own
ReqMgrSecrets --- our own. We creat it
RestClient --- supported. Custom lib
StageOut --- our own
WMComponent --- our own
WMCore_t --- our own
WMQuality --- our own
WMSandbox --- our own. It's created
WMTaskSpace --- our own
zmq --- supported https://github.com/zeromq/pyzmq/blob/master/README.md
dump --- supported (part of json lib)
dumps --- supported (part of json lib)
gfal --- not supported. Our own? https://grid-deployment.web.cern.ch/grid-deployment/documentation/LFC_DPM/gfal/man3/gfal.3.html
graphtool --- not supported. Our own? https://github.com/djw8605/graphtool
JSONDecoder --- supported (part of json lib)
JSONEncoder --- supported (part of json lib)
load --- supported (part of json lib)
loads --- supported (part of json lib)
phedexgraphs --- our own
reports --- our own
toolKIT --- our own
ApmonIf --- our own
CMSGroupMapper --- our own
CRABClient --- part of dmwm
CRABInterface --- our own
CRABQuality --- our own
DashboardAPI --- our own
Databases --- our own
HTCondorLocator --- our own
HTCondorUtils --- our own
MultiProcessingLog --- our own
PhysicsTools --- not supported??? No idea how we import it. https://twiki.cern.ch/twiki/bin/view/CMSPublic/WorkBookConfigFileIntro
RESTInteractions --- our own
ServerUtilities --- our own
TaskWorker --- our own
UserFileCache --- our own
DQIS --- part of dmwm
DQIS_t  --- our own
T0 --- part of dmwm
T0Component --- our own
netbios --- WMCore-legacy
rfc822 --- WMCore-legacy
win32wnet --- WMCore-legacy
DataProvider --- our own from LifeCycle
dbsclient_t --- our own
DBSSecret --- supported. Need to put a DBSSecret.py in your directory
dbsserver_t --- our own
LifeCycleAnalysis --- our own
LifeCycleTests --- our own
LifeCycleTools --- our own
ROOT --- not supported. http://wlav.web.cern.ch/wlav/pyroot/installation.html
SimpleXMLRPCServer --- module has been merged into xmlrpc.server in Python 3. The 2to3 tool will automatically adapt imports
adns --- not supported. Use https://github.com/trolldbois/python3-adns
ASInfo  --- __all__
GeoIP  --- __all__
GeoIPInfo  --- __all__
GeoIPLookup  --- __all__
IPResolver  --- __all__
IPTask  --- __all__
Overview --- our own
PublicSuffixLookup  --- __all__
shapefile --- supported
URL_MAXMIND_GEOCITY  --- __all__
URL_MOZILLA_PSL  --- __all__
CRABAPI --- our own
execRaw --- our own
getAllLoggers --- our own
getLogger --- our own
getTask --- our own
setLogging --- our own
Task --- our own
PandaServerInterface --- our own
CRAB_Server_API --- not know? Our own
CRAB_Server_API_1_1 --- not know? Our own
CRAB_Server_API_311X --- not know? Our own
CRAB_Server_API_36X --- not know? Our own
statvfs --- not supported. Use: os.fstatvfs()
core --- our own
LifeCycleDAS --- our own
avro --- not supported. Use: https://pypi.python.org/pypi/avro-python3/1.7.7
pydoop --- not supported. Use: https://github.com/Yelp/mrjob ; http://blog.cloudera.com/blog/2013/01/a-guide-to-python-frameworks-for-hadoop/
WMArchive --- part of dmwm
pgdb --- supported http://www.pygresql.org/contents/install.html
Analytics --- our own
BROWSER2NAME  --- __all__
cmsweb_parser --- __all__
debug --- __all__
expand --- __all__
LogAnalyser  --- __all__
RXLOG --- __all__
src --- our own
StatsByteTiming --- __all__
StatsData --- __all__
StatsKey --- __all__
StatsQuant --- __all__
URI2SVC --- __all__
DBSAPIOLD --- not used. Still used in: DBSAPI/Clients/Python/DBSAPI/UnitTests/dbsCgiRead.py and in examples
dbsApiRemap_DEPRECATED --- not used. WHY IS IT SILL THERE? DBSAPI/Clients/Python/DBSAPI/dbsApi.py
dbsApiRemapFiles_DEPRECATED --- not used. WHY IS IT SILL THERE? DBSAPI/Clients/Python/DBSAPI/dbsApi.py
RS --- not found. Used in: DBSAPI/Clients/Python/DBSAPI/dbsApi.py:143: RS.Wrapper.RegService
cmssh --- part of dmwm
coral --- unused import
RecoLuminosity --- our own. Other project: https://github.com/cms-sw/RecoLuminosity-LumiDB
dliClient --- our own
dlsApiExceptions --- our own
dlsLfcApi --- our own. Uses lfc
dlsPhedexApi --- our own. Uses lfc
lfc --- not supported. http://linux.die.net/man/3/lfc_python ????? change into what?
sgmllib --- not supported. Could use built-in HTMLParser module: http://docs.python.org/py3k/library/html.parser.html
ZSI --- not supported. discontinued Python 2 project. Could use: https://github.com/pysimplesoap/pysimplesoap
AdderPluginBase --- panda. Our own? If not available will create dummy class for it
AsyncStageOut --- our own
AsyncStageOut_t --- our own. Used in tests
CouchAPI --- panda. our own. If this one can't be imported, this one will:  WMCore.Database.CMSCouch
stomp --- supported